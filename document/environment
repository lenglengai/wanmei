一、Java

	Windows

		JAVA_HOME
			C:\Program Files\Java\jdk1.7.0_25
		CLASSPATH
			.;%JAVA_HOME%\lib\tools.jar;%JAVA_HOME%\lib\dt.jar;
		PATH
			;%JAVA_HOME%\bin

	MAC

		1、修改 /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Info.plist
		<key>JVMCapabilities</key>
		<array>
　　		<string>JNI</string>
　　		<string>BundledApp</string>
　　		<string>WebStart</string>
　　		<string>Applets</string>
　　		<string>CommandLine</string>
		</array>

		2、修改环境变量

		vi ~/.bash_profile
	
		export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home
		export PATH=$JAVA_HOME/bin:$PATH
		export CLASSPATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar

		source ~/.bash_profile

二、python
	
	Windows

		PATH
			C:\python

三、CMake

	MAC

		sudo ln -s "/Applications/CMake.app/Contents/bin/cmake" /usr/bin/cmake

四、ANT

五、ANDROID SDK
	
	Windows

		1、环境变量
		.;%ANDROID_SDK_ROOT%\platform-tools;%ANDROID_SDK_ROOT%\tools; 

		2、驱动
		https://dl-ssl.google.com//android/repository/latest_usb_driver_windows.zip

		3、修改 C:\WINDOWS\system32\drivers\etc\hosts
		203.208.46.146 dl.google.com
		203.208.46.146 dl-ssl.google.com

		4、在SDK Manager下Tools->Options打开了SDK Manager的Settings，
    	选中“Force https://… sources to be fetched using http://…”，强制使用http协议。

    MAC
    	sudo vi /etc/hosts

六、ANDROID NDK
	
	Windows

		1、下载
		http://dl.google.com/android/ndk/android-ndk-r9d-windows-x86_64.zip

七、cocos2dx

	1、python setup.py
	NDK_ROOT = d:\adt-bundle-windows-x86\android-ndk-r8e
	ANDROID_SDK_ROOT = D:\adt-bundle-windows-x86\sdk
	ANT_ROOT = d:\adt-bundle-windows-x86\apache-ant-1.9.3\bin
	COCOS_CONSOLE_ROOT=F:\cocos2dx\cocos2d-x-3.0rc0\tools/cocos2d-console/bin

	2、cocos new mbclient -p com.wanmei.mbclient -l cpp -d wanmei
	cocos compile -p android -j 4 --ap 20
	adb install -r some.apk
	adb logcat
	
八、boost
	
	android in Windows

	1. boost官网下载boost_1_55_0.tar.gz,解压放在<NDK>/sources下, 解压后的文件名: boost_1_55_0
	2. 运行Cygwin Terminal
	3. 生成boost编译工具: 在boost目录下运行./bootstrap.sh 或者 bootstrap.bat 生成 b2
	4. 修改 <boost>/tools/build/v2/user-config.jam
	5. 由于使用了gnu++11，auto_ptr处于deprecated状态，替换成unique_ptr就可以解决。boost中唯一一处引用出现在<boost>/libs/signals/src/signal_base.cpp中的136行
	//       std::auto_ptr<iterator> slot(reinterpret_cast<iterator*>(data));
       std::unique_ptr<iterator>slot(reinterpret_cast<iterator*>(data));
	6. ./b2 --without-python --without-mpi --without-serialization toolset=gcc-android4.6 link=static runtime-link=static target-os=linux --stagedir=android

	7. 在应用程序的Application.mk中添加
	添加异常支持 APP_CPPFLAGS += –fexceptions
	#使用stlport_static选项时，与boost一起使用，会在链接时产生如下错误：
	# undefined reference to 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()'  
	APP_STL := gnustl_static #stlport_static
	

	windows

	1、bootstrap.bat
	2、b2 toolset=msvc --with-system --with-exception --with-filesystem --with-log --with-thread --with-date_time --with-atomic --with-timer --with-locale  link=static runtime-link=static variant=release stage

	mac
	1、./bootstrap.sh
	2、./b2 toolset=darwin  --with-system --with-exception --with-filesystem --with-log --with-thread --with-date_time --with-atomic --with-timer --with-locale  link=static runtime-link=static variant=release stage

九、xcode
	xcodebuild -project client.xcodeproj -configuration Release